# =============================================================================
# test.rb -- Test methods
#
# Copyright (c) 2019-2020 Benjamin P. Haley
#
# See the LICENSE file for information on usage and redistribution of this
# file and for a DISCLAIMER OF ALL WARRANTIES.
# =============================================================================

require 'open3'

def ps_to_png(psfile)
   pngfile = File.basename(psfile, '.ps') + '.png'
   pin, pout, thwait = Open3.popen2e("ps2png #{psfile} #{pngfile}")
   status = thwait.value
   pngfile
end

# Return true/false to indicate whether file1 and file2 are "equal".  
#
# Comparing Postscript files is tricky, especially since the reference
# files were created with older versions of the pstricks library.  Newer
# impelementations add dict entries and change whitespace so that direct
# comparison with "diff" or String#== is difficult.
#
# Here we convert the ps files to png and compare the resulting images.
def compare_ps(file1, file2)
   png1 = ps_to_png(file1)
   png2 = ps_to_png(file2)
   pin, pout, thwait = Open3.popen2e("diff #{png1} #{png2}")
   status = thwait.value
   [png1, png2].each {|p| File.delete(p)}
   status.success?
end

# Run all tests; compare the Postscript generated by calling ps_lambda to the
# canonical test Postscript
def run_tests(test_dir, tests, ps_lambda)
   psfile = 'test.ps'
   $stdout.write("\n")
   Dir.chdir(test_dir) do
      tests.each do |t|
         base = File.basename(t, '.*')
         begin
            ps_lambda.call(t, psfile)
            $stdout.printf("%12.12s: ", base)
            if compare_ps(psfile, base+'.ps')
               $stdout.write("ok\n")
            else 
               $stdout.write("--> FAILED <--\n")
            end
         rescue RuntimeError => e
            $stdout.write("Postscript generation failed for #{t}: #{e}")
         end
      end
      File.delete(psfile) if File.exists?(psfile)
   end
   $stdout.write("\n")
end
